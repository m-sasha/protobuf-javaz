buildscript{

    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies{
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.5'
    }

}

plugins{
    id 'java'
    id 'com.google.protobuf' version '0.8.5'
}

// Distribution directory
def distDir = file("$buildDir/dist")


group 'com.maryanovsky.protobuf-javaz'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories{
    mavenCentral()
}


dependencies{
    compile 'com.intellij:annotations:+@jar'
    compile 'com.google.protobuf:protobuf-java:3.5.1'
    compile 'com.squareup:javapoet:1.11.1'
    compile 'com.google.guava:guava:25.1-jre'
    compile project(':runtime')

    testCompile group: 'junit', name: 'junit', version: '4.12'
}


protobuf {

    protoc {
        artifact = 'com.google.protobuf:protoc:3.0.0'
    }

    plugins {
        javaz{
            path = "$distDir/protobuf-javaz-gen"
        }
    }

    generateProtoTasks {
        ofSourceSet('test').each{ task ->
            task.plugins{
                javaz { }
            }
        }
    }

}


// Create an executable jar
jar {
    destinationDir = distDir
    archivesBaseName = 'protobuf-javaz-gen'
    manifest {
        attributes 'Main-Class': 'com.maryanovsky.pbjz.gen.ProtobufJavaZero'
        attributes 'Class-Path' : configurations.runtime.collect { it.getName() }.join(' ')
    }
}


// Copy dependency jars
task copyRuntimeLibs(type: Copy){
    into distDir
    from configurations.runtime
}


// Create executable script, which can be used as a protoc plugin
task createExecutable{
    doFirst{
        File script = new File(distDir, "protobuf-javaz-gen")
        script.text = '''#!/bin/bash
cd "${0%/*}"
java -jar protobuf-javaz-gen-1.0-SNAPSHOT.jar
'''
        script.setExecutable(true, true)
    }
}

// Distribution task. Run this before the build task
task dist(dependsOn: [jar, copyRuntimeLibs, createExecutable]){}